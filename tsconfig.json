{
  "compilerOptions": {
    /* --- Vite/React Build Options --- */
    "target": "ES2020",                 // Target modern JavaScript features
    "useDefineForClassFields": true,    // Standard for modern class fields
    "module": "ESNext",                 // Use modern ES modules
    "lib": ["ES2020", "DOM", "DOM.Iterable"], // Include necessary libraries for browser and modern JS
    "skipLibCheck": true,               // Skip type checking of declaration files (node_modules)
    "esModuleInterop": true,            // Enables compatibility with CommonJS modules
    "allowSyntheticDefaultImports": true, // Allows default imports from modules with no default export
    "forceConsistentCasingInFileNames": true, // Enforce consistent file naming casing

    "moduleResolution": "Node",         // <<< Use Node module resolution strategy
    // "allowImportingTsExtensions": true, // <<< REMOVED
    "resolveJsonModule": true,          // Allow importing JSON files
    "isolatedModules": true,            // Treat files as separate modules (required by Babel/Vite)
    "noEmit": true,                     // Do not output JS files (Vite handles this)
    "jsx": "react-jsx",                 // Use the new JSX transform

    /* --- Linting / Strictness Options --- */
    "strict": true,                     // Enable all strict type-checking options (recommended)
    // Add back specific strictness overrides below if needed, but 'strict: true' is usually best
    // "noImplicitAny": false,
    // "noUnusedLocals": false,
    // "noUnusedParameters": false,
    "noFallthroughCasesInSwitch": true, // Report errors for fallthrough cases in switch statements

    /* --- Path Aliases (Keep if you use them) --- */
    "baseUrl": ".",                     // Base directory for non-relative module resolution
    "paths": {
      "@/*": ["./src/*"]                // Example: Allows import '@/components/...'
    }

    // "types": ["./node_modules/vite/client"] // <<< REMOVED
  },
  "include": ["src", "**/*.ts", "**/*.tsx"], // <<< Files TypeScript should check
  "exclude": ["node_modules", "dist"]      // <<< Folders TypeScript should ignore
  // "references" line fully removed as tsconfig.node.json doesn't exist
}